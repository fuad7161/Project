'use strict';

// Data needed for a later exercise
const flights =
  '_Delayed_Departure;fao93766109;txl2133758440;11:25+_Arrival;bru0943384722;fao93766109;11:45+_Delayed_Arrival;hel7439299980;fao93766109;12:05+_Departure;fao93766109;lis2323639855;12:30';

// Data needed for first part of the section
const restaurant = {
  name: 'Classico Italiano',
  location: 'Via Angelo Tavanti 23, Firenze, Italy',
  categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'],
  starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'],
  mainMenu: ['Pizza', 'Pasta', 'Risotto'],

  openingHours: {
    thu: {
      open: 12,
      close: 22,
    },
    fri: {
      open: 11,
      close: 23,
    },
    sat: {
      open: 0, // Open 24 hours
      close: 24,
    },
  },
};

const values = Object.values(restaurant.openingHours);
console.log(values);

const entries = Object.entries(restaurant.openingHours);
console.log(entries);

// rest syntex
const [a, b, ...others] = [1, 2, 3, 4, 5];
console.log(a, b, others);

const [pissa, ristto, ...otherFood] = [
  ...restaurant.mainMenu,
  ...restaurant.starterMenu,
];

console.log(pissa, ristto, otherFood);

const { sat, ...weekdays } = restaurant.openingHours;
console.log(weekdays);

const add = function (...numbers) {
  console.log(numbers);
};
add(2, 3);
add(5, 3, 7, 2);
add(1, 2, 3, 4, 5, 6);

const x = [23, 5, 7];
add(...x);

// coding challenge 01
const game = {
  team1: 'Bayern Munich',
  team2: 'Borrussia Dortmund',
  players: [
    [
      'Neuer',
      'Pavard',
      'Martinez',
      'Alaba',
      'Davies',
      'Kimmich',
      'Goretzka',
      'Coman',
      'Muller',
      'Gnarby',
      'Lewandowski',
    ],
    [
      'Burki',
      'Schulz',
      'Hummels',
      'Akanji',
      'Hakimi',
      'Weigl',
      'Witsel',
      'Hazard',
      'Brandt',
      'Sancho',
      'Gotze',
    ],
  ],
  score: '4:0',
  scored: ['Lewandowski', 'Gnarby', 'Lewandowski', 'Hummels'],
  date: 'Nov 9th, 2037',
  odds: {
    team1: 1.33,
    x: 3.25,
    team2: 6.5,
  },
};

const gameEvents = new Map([
  [17, '丘쬂잺 GOAL'],
  [36, '游대 Substitution'],
  [47, '丘쬂잺 GOAL'],
  [61, '游대 Substitution'],
  [64, '游댰 Yellow card'],
  [69, '游댮 Red card'],
  [70, '游대 Substitution'],
  [72, '游대 Substitution'],
  [76, '丘쬂잺 GOAL'],
  [80, '丘쬂잺 GOAL'],
  [92, '游댰 Yellow card'],
]);

const airline = 'TAP Air Portugal';

// 1. Create an array 'events' of the different game events that happened (no duplicates)

const arEvent = new Set(gameEvents.values());
console.log(arEvent);
for (const [key, val] of gameEvents) {
  arEvent.add(val);
}
console.log(arEvent);

// 2. After the game has finished, is was found that the yellow card from minute 64 was unfair. So remove this event from the game events log.
const event1 = gameEvents.delete(64);
console.log(gameEvents);
// 3. Print the following string to the console: "An event happened, on average, every 9 minutes" (keep in mind that a game has 90 minutes)

console.log(
  `An event happened, on average, every ${90 / gameEvents.size} minutes`
);
const goal = Object.entries(game.scored);
for (const [key, val] of goal) {
  console.log(`Goal ${key}: ${val}`);
}

let sum = 0;
const odds = Object.values(game.odds);
for (const val of odds) {
  sum += val;
}
let avarage = sum / odds.length;
console.log(avarage);

for (const [team, odd] of Object.entries(game.odds)) {
  const teamStr = team == 'x' ? 'draw' : `victory ${game[team]}`;
  console.log(`Odd of ${teamStr} ${odd}`);
}

const [player1, player2] = game.players;
console.log(player1, player2);

const [gk, ...fieldPlayers] = player1;
console.log(gk, fieldPlayers);

const allPlayer = [...player1, ...player2];
console.log(allPlayer);

const playersFinal = [...player1, 'thiago', 'Coutinho', 'Periscic'];

const {
  odds: { team1, x: draw, team2 },
} = game;
console.log(team1, draw, team2);

const printGoal = function (...players) {
  console.log(players);
};
printGoal(...game.scored);

team1 < team2 && console.log('team 1 is more likly to win');
team1 > team2 && console.log('team 2 is more likly to win');
